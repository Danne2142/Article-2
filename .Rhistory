library(ggplot2)
df_EPICv1_EPICv2_new <- read.csv("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Data/EPICv1 and v2 data/All_metrics_crossectional_samples.csv", header=TRUE, stringsAsFactors=FALSE)
# #Remove unwated samples
# df_EPICv1_EPICv2_new<-remove_patient_case("206084850048_R07C01",df_EPICv1_EPICv2_new)
# df_EPICv1_EPICv2_new<-remove_patient_case("206103060090_R03C01", df_EPICv1_EPICv2_new)
# Rename collumn DunedinPoAm to DunedinPACE as it was misnamed according to Natalia
names(df_EPICv1_EPICv2_new)[names(df_EPICv1_EPICv2_new) == "DunedinPoAm"] <- "DunedinPACE"
# df_EPICv1_old <- read.csv("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Data/EPICv1 data/All_metrics_crossectional_samples.csv", header=TRUE, stringsAsFactors=FALSE)
df_EPICv1_EPICv2_new[df_EPICv1_EPICv2_new == ""] <- NA
#Remove unnecessary text in searchword collumns
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/remove_unnecessary_strings().R")
install.packages("readr")
#install.packages("ggplot2")
#install.packages("dplyr")
install.packages("readr")
library(dplyr)
# Load the necessary packages
library(ggplot2)
df_EPICv1_EPICv2_new <- read.csv("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Data/EPICv1 and v2 data/All_metrics_crossectional_samples.csv", header=TRUE, stringsAsFactors=FALSE)
# #Remove unwated samples
# df_EPICv1_EPICv2_new<-remove_patient_case("206084850048_R07C01",df_EPICv1_EPICv2_new)
# df_EPICv1_EPICv2_new<-remove_patient_case("206103060090_R03C01", df_EPICv1_EPICv2_new)
# Rename collumn DunedinPoAm to DunedinPACE as it was misnamed according to Natalia
names(df_EPICv1_EPICv2_new)[names(df_EPICv1_EPICv2_new) == "DunedinPoAm"] <- "DunedinPACE"
# df_EPICv1_old <- read.csv("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Data/EPICv1 data/All_metrics_crossectional_samples.csv", header=TRUE, stringsAsFactors=FALSE)
df_EPICv1_EPICv2_new[df_EPICv1_EPICv2_new == ""] <- NA
#Remove unnecessary text in searchword collumns
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/remove_unnecessary_strings().R")
# Define the parameters
remove_list <- c("Senolytic therapy (dasatinib, quercetin, rapamycin, etc.)", "Digestive support: probiotic, digestive enzymes, etc.", "Herbal supplements",
"Fish oil/Omega fatty acids",
"Antioxidants: coenzyme Q10, green tree extract, resveratrol, etc.", "Workout supplements",
"Minerals, calcium, iron, etc.", "Antioxidants: coenzyme Q10, green tea extract, resveratrol, etc.")
columns_to_process <- c("Anti.Aging.Interventions", "Supplements.Medication", "Nutritional.Supplements")
df_EPICv1_EPICv2_new<-remove_unnecessary_strings(df_EPICv1_EPICv2_new, remove_list, columns_to_process)
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/survey_version_functions.R")
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/process_supplement_data().R")
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/process_diet().R")
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/Users_without_searchwords().R")
install.packages("data.table")
install.packages("pacman")
#install.packages("ggplot2")
#install.packages("dplyr")
# install.packages("readr")
# install.packages("pacman")
# install.packages("readr")
# install.packages("readr")
# install.packages("readr")
# install.packages("readr")
p_load(dplyr)
library(pacman)
p_load(dplyr)
# install.packages("pacman")
library(pacman)
p_load(dplyr)
# Load the necessary packages
p_load(ggplot2)
df_EPICv1_EPICv2_new <- read.csv("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Data/EPICv1 and v2 data/All_metrics_crossectional_samples.csv", header=TRUE, stringsAsFactors=FALSE)
# #Remove unwated samples
# df_EPICv1_EPICv2_new<-remove_patient_case("206084850048_R07C01",df_EPICv1_EPICv2_new)
# df_EPICv1_EPICv2_new<-remove_patient_case("206103060090_R03C01", df_EPICv1_EPICv2_new)
# Rename collumn DunedinPoAm to DunedinPACE as it was misnamed according to Natalia
names(df_EPICv1_EPICv2_new)[names(df_EPICv1_EPICv2_new) == "DunedinPoAm"] <- "DunedinPACE"
# df_EPICv1_old <- read.csv("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Data/EPICv1 data/All_metrics_crossectional_samples.csv", header=TRUE, stringsAsFactors=FALSE)
df_EPICv1_EPICv2_new[df_EPICv1_EPICv2_new == ""] <- NA
#Remove unnecessary text in searchword collumns
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/remove_unnecessary_strings().R")
# Define the parameters
remove_list <- c("Senolytic therapy (dasatinib, quercetin, rapamycin, etc.)", "Digestive support: probiotic, digestive enzymes, etc.", "Herbal supplements",
"Fish oil/Omega fatty acids",
"Antioxidants: coenzyme Q10, green tree extract, resveratrol, etc.", "Workout supplements",
"Minerals, calcium, iron, etc.", "Antioxidants: coenzyme Q10, green tea extract, resveratrol, etc.")
columns_to_process <- c("Anti.Aging.Interventions", "Supplements.Medication", "Nutritional.Supplements")
df_EPICv1_EPICv2_new<-remove_unnecessary_strings(df_EPICv1_EPICv2_new, remove_list, columns_to_process)
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/survey_version_functions.R")
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/process_supplement_data().R")
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/process_diet().R")
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/Users_without_searchwords().R")
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/replace_na_with_false().R")
source("C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Program/seperate_survey().R")
cols_survey2_3 <-c("Hours.Sedentary.Remaining.Awake", "Primary.Diet.Past.Year","Strictly.Followed.","Red.Meat.times.per.week","Processed.Food.times.per.week","Feel.Well.Rested.days.per.week","Screens.before.bed","Track.Sleep.Wearable.Device")
#Remove rows with "other" in biological sex collumn
cols_survey3_1 <-c("Height.in", "Weight", "Lab.Fasting", "Anti.Aging.Interventions", "Menopause", "Given.Birth", "Hours.of.sleep.per.night")
df_EPICv1_EPICv2_new <- add_surv_version_col(df_EPICv1_EPICv2_new, cols_survey2_3, cols_survey3_1)
# Create a histogram of survey classifications
# ggplot2::ggplot(df_EPICv1_EPICv2_new, ggplot2::aes(x = factor(survey_version))) +
#   ggplot2::geom_histogram(stat = "count", fill = "skyblue", color = "black") +
#   ggplot2::labs(title = "Histogram of Survey Classifications", x = "Survey Version", y = "Count")
# # #
# df_EPICv1_EPICv2_new <- filter(df_EPICv1_EPICv2_new, survey_version=="2"|survey_version=="3")
# # #
# # #
new_columns <- c(
"Patient.ID", "PID", "survey_version", "Array", "Collection.Date", "Decimal.Chronological.Age", "Biological.Sex",
"Menopause", "Given.Birth", "Mother.Nicotine.Use", "Mother.Pregnancy.Complications",
"Diagnosed.with.low.or.high.calcium", "Marital.Status", "Level.of.Education",
"Stress.Level", "Caffeine.Use",
"Tobacco.Use", "Main.Diet", "Alcohol.per.week",
"Recreational.Drug.Frequency", "Exercise.per.week",
"Exercise.Type", "Sexual.Frequency", "Hours.of.sleep.per.night",
"Allergies.family", "Arthritis.family", "Asthma.family", "Back.Problems.family",
"Blood.Diseases.family", "Cancer.family", "COPD.family", "Diabetes.family",
"Drug.Alcohol.family", "Emphysema.family", "Genetic.Disorder.family",
"Stomach.Problems.family", "Kidney.Disease.family", "Heart.Problems.family",
"High.Blood.Pressure.family", "Neurological.Disease.family", "Obesity.family",
"Psychiatric.family", "Scolliosis.family", "SIDS.family", "Stroke.family",
"Tuberculosis.family", "Thyroid.Disorder.family", "Are.you.adopted.",
"Do.you.have.any.parents.or.grandparents.or.great.grandparents.that.live.to.or.beyond.100.years.old.",
"Age.mother.at.birth", "Age.father.at.birth", "Hours.Sedentary.Remaining.Awake",
"Primary.Diet.Past.Year", "Strictly.Followed.Main.Diet", "Red.Meat.times.per.week",
"Processed.Food.times.per.week", "Feel.Well.Rested.days.per.week",
"Screens.before.bed", "Track.Sleep.Wearable.Device", "Lab.Fasting", "Ethnicity",
"Cancer.Diagnosis.any", "Cardiovascular.any", "Respiratory.Disease.any",
"Endocrine.Disease.any", "Skin.Hair.any", "Gastrointestinal.any",
"Genito.Urinary.any", "Musculoskeletal.any", "Neuropsychological.any",
"Reproductive.any", "Immune.any", "Anemia", "High.Cholesterol", "Heart.Murmur",
"Rheumatic.Fever", "Stroke", "High.Blood.Pressure", "Heart.Attack", "Hemophilia",
"Sickle.Cell.Disease", "Asthma", "Chronic.Bronchitis", "Cystic.Fibrosis",
"Pleural.Effusion", "COPD", "Emphysema", "Pneumonia", "Tuberculosis", "Acne",
"Dandruff", "Loss.Hair", "Psoriasis", "Vitiligo", "Eczema", "Ichthyossis",
"Pressure.Ulcers", "Seborrheic.dermatitis", "Addison.Disease", "Gestational.Diabetes",
"Hashimoto.Thyroiditis", "Prediabetes", "Diabetes2", "Cushing.Syndrome",
"Grave.Disease", "Osteoporosis", "Diabetes1", "Celiac.Disease", "Cirrhosis",
"Gallstones", "Hemorrhoids", "Irritable.Bowel", "Crohn.Disease", "Diverticulitis",
"Gastroesophageal.Reflux", "Hepatitis", "Ulcerative.Colitis", "Interstitial.Cystitis",
"Ostomy", "Urinary.Tract.Infections", "Kidney.Stones", "Urinary.Incontinence",
"Gout", "Psoriatic.Arthritis", "Tendonitis", "Osteoarthritis",
"Rheumatoid.Arthritis", "Alzheimer", "Depression", "Fibromyalgia", "Parkinson",
"Traumatic.Brain.Injury", "Anxiety", "Epilepsy", "Migraines", "Seizures",
"Elevated.PSA", "Endometriosis", "Uterine.Fibroids", "Enlarged.Prostate",
"Polycystic.Ovary", "HIV", "Lupus", "Myasthenia.Gravis", "Vasculitis",
"Guillain.Barre.syndrome", "Multiple.Sclerosis", "Severe.combined.immunodeficiency",
"Cytomegalovirus", "Bladder.Cancer", "Breast.Cancer", "Cervical.Cancer",
"Colorectal.Cancer", "Gynecologic.Cancer", "Head.Cancer", "Neck.Cancer",
"Kidney.Cancer", "Liver.Cancer", "Lung.Cancer", "Lymphoma.Cancer",
"Mesothelioma.Cancer", "Myeloma.Cancer", "Ovarian.Cancer", "Prostate.Cancer",
"Skin.Cancer", "Thyroid.Cancer", "Uterine.Cancer", "Vaginal.Vulvar.Cancer",
"Recreational.Drug.Use.any", "Drug.Alcohol.mother",
"Drug.Alcohol.father", "Main.Diet.Factor", "FactorV", "MTHFR", "APOE",
"BRCA1_BRCA2", "BMI" ,"Hannum.PC", "Horvath.PC",
"Telomere.Values.PC", "GrimAge.PC", "PhenoAge.PC", "SystemsAge.Blood",
"SystemsAge.Brain", "SystemsAge.Inflammation", "SystemsAge.Heart",
"SystemsAge.Hormone", "SystemsAge.Immune", "SystemsAge.Kidney",
"SystemsAge.Liver", "SystemsAge.Metabolic", "SystemsAge.Lung",
"SystemsAge.MusculoSkeletal", "SystemsAge", "OMICmAge", "DunedinPACE"
)
# filtered_df_crossectional_harmonized <- df_EPICv1_EPICv2_new
filtered_df_crossectional_harmonized <- df_EPICv1_EPICv2_new[new_columns]
### VERY IMPORTANT: Updates the changes to df_EPICv1_EPICv2_new so that your functions will actually use them, as they load the file path of df_EPICv1_EPICv2_new.csv and not the object df_EPICv1_EPICv2_new
write.csv(df_EPICv1_EPICv2_new, file = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv", row.names = FALSE)
result_fasting <- process_diet(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "fasting",
searchwords_case_unsensitive = "Fasting|Caloric restriction|Time-restricted eating|Time-restricted fasting|intermittent fast|calorie restrict",
searchwords_case_sensitive = "",
old_columns = c()
)
#add fasting to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_fasting$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_fasting$df_clean)[ncol(result_fasting$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "fasting")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", 0))
print(paste("Number of extra users using searchwords:", sum(result_fasting$searchword_findings$fasting, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_fasting$df_clean1$fasting, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: fasting_searchword_findings"))
fasting_searchword_findings<-result_fasting$searchword_findings
# Check if the 'Main.Diet' column exists in the dataframe
if (!"Main.Diet" %in% colnames(filtered_df_crossectional_harmonized)) {
stop("Error: The 'Main.Diet' column is missing from 'filtered_df_crossectional_harmonized' dataframe.")
}
# Define the list of valid diet options
valid_diets <- c("Mostly meat and fish", "Mostly vegetables", "Both meat and vegetables", "Ketogenic diet")
# Apply the transformation to the Main.Diet column
filtered_df_crossectional_harmonized$Main.Diet <- ifelse(
is.na(filtered_df_crossectional_harmonized$Main.Diet) | filtered_df_crossectional_harmonized$Main.Diet == "",
NA,
ifelse(
filtered_df_crossectional_harmonized$Main.Diet %in% valid_diets,
filtered_df_crossectional_harmonized$Main.Diet,
"Other"
)
)
# The Main.Diet column will now only contain valid values, "Other", or NA
result_nad <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "NAD",
searchwords_case_unsensitive = "NMN|nad|nicotinamide|B3|Niagen|Niacin|Elysium Signal|Elysium Health's Basis|Nuchido Time+|elysium Basis|Basis+",
searchwords_case_sensitive = "NR|NDA",
old_columns = c("NR.NAD", "Antiaging.NAD"),
rows_to_remove = c("207428030059_R06C01", "206693210178_R02C01", "205117390039_R05C01", "204229100144_R06C01")
)
#add NAD to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_nad$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_nad$df_clean)[ncol(result_nad$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized<-replace_na_with_false(filtered_df_crossectional_harmonized, "NAD")
#Compare searchword method to not using searchwords
file_path <- "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv"
no_searchword_results <- count_true_values(file_path, "NR.NAD", "Antiaging.NAD")
# Print the result
print(paste("Number of users without using searchwords:", no_searchword_results))
print(paste("Number of extra users using searchwords:", sum(result_nad$searchword_findings$NAD, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_nad$df_clean1$NAD, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: NAD_searchword_findings"))
NAD_searchword_findings<-result_nad$searchword_findings
NAD_removed_rows<-result_nad$df_removed_rows
result_TA65 <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "TA65",
searchwords_case_unsensitive = "TA.65|TA-65|TA65|TA 65|Astragalus|Astragaloside|Cycloastragenol",
searchwords_case_sensitive = "",
old_columns = c("TA.65")
)
#add TA65 to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_TA65$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_TA65$df_clean)[ncol(result_TA65$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized<-replace_na_with_false(filtered_df_crossectional_harmonized, "TA65")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", sum(df_EPICv1_EPICv2_new$TA.65, na.rm = TRUE)))
print(paste("Number of extra users using searchwords:", sum(result_TA65$searchword_findings$TA65, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_TA65$df_clean1$TA65, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: TA65_searchword_findings"))
TA65_searchword_findings<-result_TA65$searchword_findings
result_sulforaphane <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "sulforaphane",
searchwords_case_unsensitive = "Sulforaphane|Sulphoraphane|broccoli|brocoli|SFN|Avmacol|suphlorophane",
searchwords_case_sensitive = "",
old_columns = c("Sulphoraphane.broccoli.extract")
)
#add sulforaphane to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_sulforaphane$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_sulforaphane$df_clean)[ncol(result_sulforaphane$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized<-replace_na_with_false(filtered_df_crossectional_harmonized, "sulforaphane")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", sum(df_EPICv1_EPICv2_new$Sulphoraphane.broccoli.extract, na.rm = TRUE)))
print(paste("Number of extra users using searchwords:", sum(result_sulforaphane$searchword_findings$sulforaphane, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_sulforaphane$df_clean1$sulforaphane, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: sulforaphane_searchword_findings"))
sulforaphane_searchword_findings<-result_sulforaphane$searchword_findings
result_DHEA <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "DHEA_new",
searchwords_case_unsensitive = "DHEA|Dehydroepiandrosterone|Prasterone|Androstenolone",
searchwords_case_sensitive = "",
old_columns = c("DHEA"),
rows_to_remove = c("204229110168_R02C01")
)
#add DHEA to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_DHEA$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_DHEA$df_clean)[ncol(result_DHEA$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "DHEA_new")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", sum(df_EPICv1_EPICv2_new$DHEA, na.rm = TRUE)))
print(paste("Number of extra users using searchwords:", sum(result_DHEA$searchword_findings$DHEA_new, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_DHEA$df_clean1$DHEA_new, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: DHEA_searchword_findings"))
DHEA_searchword_findings<-result_DHEA$searchword_findings
DHEA_removed_rows<-result_DHEA$df_removed_rows
result_Rapamycin <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "Rapamycin_new",
searchwords_case_unsensitive = "Rapamycin|Sirolimus|Fyarro|Hyftor|Rapamune",
searchwords_case_sensitive = "",
old_columns = c("Rapamycin")
)
#add Rapamycin to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_Rapamycin$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_Rapamycin$df_clean)[ncol(result_Rapamycin$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "Rapamycin_new")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", sum(df_EPICv1_EPICv2_new$Rapamycin, na.rm = TRUE)))
print(paste("Number of extra users using searchwords:", sum(result_Rapamycin$searchword_findings$Rapamycin_new, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_Rapamycin$df_clean1$Rapamycin_new, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: Rapamycin_searchword_findings"))
Rapamycin_searchword_findings<-result_Rapamycin$searchword_findings
result_SASP_supressors <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "SASP_supressors",
searchwords_case_unsensitive = "Rapamycin|Sirolimus|Fyarro|Hyftor|Rapamune|Senolytic|quercetin|dasatanib|dasatinib|Fisetin|Senomorphic|SASP|MitoQ|Mito Q|apigenin|Curcumin|fisatine|TA.65|TA-65|TA 65|Astragalus|Astragaloside|Cycloastragenol|Metformin|Berberine|berbarine",
searchwords_case_sensitive = "",
old_columns = c("Rapamycin", "Antiaging.Senolytics", "Metformin", "TA.65"),
rows_to_remove = c("204930630030_R04C01", "205117390039_R05C01", "207343250042_R01C01", "206602840028_R04C01")
)
#add SASP_supressors to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_SASP_supressors$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_SASP_supressors$df_clean)[ncol(result_SASP_supressors$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "SASP_supressors")
#Compare searchword method to not using searchwords
file_path <- "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv"
no_searchword_results <- count_true_values(file_path, "Rapamycin", "Antiaging.Senolytics", "Metformin", "TA.65")
# Print the result
print(paste("Number of users without using searchwords:", no_searchword_results))
print(paste("Number of extra users using searchwords:", sum(result_SASP_supressors$searchword_findings$SASP_supressors, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_SASP_supressors$df_clean1$SASP_supressors, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: SASP_supressors_searchword_findings"))
SASP_supressors_searchword_findings<-result_SASP_supressors$searchword_findings
SASP_supressors_removed_rows<-result_SASP_supressors$df_removed_rows
result_Metformin <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "Metformin_new",
searchwords_case_unsensitive = "Metformin|Berberine|berbarine",
searchwords_case_sensitive = "",
old_columns = c("Metformin"),
rows_to_remove = c("206602840028_R04C01", "204930630030_R04C01", "207510060018_R06C01")
)
#add Metformin to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_Metformin$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_Metformin$df_clean)[ncol(result_Metformin$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "Metformin_new")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", sum(df_EPICv1_EPICv2_new$Metformin, na.rm = TRUE)))
print(paste("Number of extra users using searchwords:", sum(result_Metformin$searchword_findings$Metformin_new, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_Metformin$df_clean1$Metformin_new, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: Metformin_searchword_findings"))
Metformin_searchword_findings<-result_Metformin$searchword_findings
Metformin_removed_rows<-result_Metformin$df_removed_rows
result_Resveratrol <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "Resveratrol_new",
searchwords_case_unsensitive = "Resveratrol|resveraCel|resverotrol|Pterostilbene",
searchwords_case_sensitive = "",
old_columns = c("Resveratrol"),
rows_to_remove = c("206602840028_R04C01")
)
#add Resveratrol to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_Resveratrol$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_Resveratrol$df_clean)[ncol(result_Resveratrol$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "Resveratrol_new")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", sum(df_EPICv1_EPICv2_new$Resveratrol, na.rm = TRUE)))
print(paste("Number of extra users using searchwords:", sum(result_Resveratrol$searchword_findings$Resveratrol_new, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_Resveratrol$df_clean1$Resveratrol_new, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: Resveratrol_searchword_findings"))
Resveratrol_searchword_findings<-result_Resveratrol$searchword_findings
Resveratrol_removed_rows<-result_Resveratrol$df_removed_rows
result_Exosomes <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "Exosomes",
searchwords_case_unsensitive = "Exosome|vesic",
searchwords_case_sensitive = "",
old_columns = c("Antiaging.Exosome")
)
#add Exosomes to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_Exosomes$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_Exosomes$df_clean)[ncol(result_Exosomes$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "Exosomes")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", sum(df_EPICv1_EPICv2_new$Antiaging.Exosome, na.rm = TRUE)))
print(paste("Number of extra users using searchwords:", sum(result_Exosomes$searchword_findings$Exosomes, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_Exosomes$df_clean1$Exosomes, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: Exosomes_searchword_findings"))
Exosomes_searchword_findings<-result_Exosomes$searchword_findings
result_stem_cells <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "stem_cells",
searchwords_case_unsensitive = "CELULAS MADRES|Stem cell",
searchwords_case_sensitive = "",
old_columns = c("Antiaging.Stem.Cell"),
rows_to_remove = c("204229100139_R07C01","205676800104_R04C01", "206240670072_R05C01", "204229100139_R07C01")
)
#add stem_cells to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_stem_cells$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_stem_cells$df_clean)[ncol(result_stem_cells$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "stem_cells")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", sum(df_EPICv1_EPICv2_new$Antiaging.Exosome, na.rm = TRUE)))
print(paste("Number of extra users using searchwords:", sum(result_stem_cells$searchword_findings$stem_cells, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_stem_cells$df_clean1$stem_cells, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: stem_cells_searchword_findings"))
stem_cells_searchword_findings<-result_stem_cells$searchword_findings
stem_cells_removed_rows<-result_stem_cells$df_removed_rows
result_HRT <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "HRT",
searchwords_case_unsensitive = "Hormone|testosterone|estrogen|estradiol|progesterone|DHEA|Dehydroepiandrosterone|HGH|Growth Hormone|GHRH|HCG|Pregnyl|Ipamorelin|Norditropin|Androforte|TRT|HCG|Pregnenolone|Cypionate|testosterone|Testorone|Tesamorelin|sermorelin|estriol|Estring|CJC|Testoplex",
searchwords_case_sensitive = "GH",
old_columns = c("Antiaging.Hormone.Replacement", "DHEA"),
rows_to_remove = c("204229100153_R06C01", "204229100143_R04C01")
)
#add HRT to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_HRT$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_HRT$df_clean)[ncol(result_HRT$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "HRT")
#Compare searchword method to not using searchwords
file_path <- "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv"
no_searchword_results <- count_true_values(file_path, "Antiaging.Hormone.Replacement", "DHEA")
# Print the result
print(paste("Number of users without using searchwords:", no_searchword_results))
print(paste("Number of extra users using searchwords:", sum(result_HRT$searchword_findings$HRT, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_HRT$df_clean1$HRT, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: HRT_searchword_findings"))
HRT_searchword_findings<-result_HRT$searchword_findings
HRT_removed_rows<-result_HRT$df_removed_rows
result_spermidine <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "spermidine",
searchwords_case_unsensitive = "Spermidine|Primeadine|Spermedine",
searchwords_case_sensitive = "",
old_columns = c(),
rows_to_remove = c("205117390039_R05C01")
)
#add spermidine to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_spermidine$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_spermidine$df_clean)[ncol(result_spermidine$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "spermidine")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", 0))
print(paste("Number of extra users using searchwords:", sum(result_spermidine$searchword_findings$spermidine, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_spermidine$df_clean1$spermidine, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: spermidine_searchword_findings"))
spermidine_searchword_findings<-result_spermidine$searchword_findings
spermidine_removed_rows<-result_spermidine$df_removed_rows
result_semaglutide <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "semaglutide",
searchwords_case_unsensitive = "GLP|semaglutide|Ozempic|Wegovy|Saxenda|liraglutide|semautide|Ozemoic",
searchwords_case_sensitive = "",
old_columns = c()
)
#add semaglutide to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_semaglutide$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_semaglutide$df_clean)[ncol(result_semaglutide$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "semaglutide")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", 0))
print(paste("Number of extra users using searchwords:", sum(result_semaglutide$searchword_findings$semaglutide, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_semaglutide$df_clean1$semaglutide, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: semaglutide_searchword_findings"))
semaglutide_searchword_findings<-result_semaglutide$searchword_findings
result_vitaminD <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "vitaminD",
searchwords_case_unsensitive = "Vit-D|Vitamin D|vit D|D3 |v itiam D|Vitamine D|Vitamins D",
searchwords_case_sensitive = "",
old_columns = c()
)
#add vitaminD to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_vitaminD$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_vitaminD$df_clean)[ncol(result_vitaminD$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "vitaminD")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", 0))
print(paste("Number of extra users using searchwords:", sum(result_vitaminD$searchword_findings$vitaminD, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_vitaminD$df_clean1$vitaminD, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: vitaminD_searchword_findings"))
vitaminD_searchword_findings<-result_vitaminD$searchword_findings
result_AKG <- process_supplement_data(
file_path = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/df_EPICv1_EPICv2_new.csv",
supplement = "AKG",
searchwords_case_unsensitive = "AKG|Alfa-keto|Alpha-keto|Alpha keto|Alfa keto",
searchwords_case_sensitive = "",
old_columns = c()
)
#add AKG to filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- merge(filtered_df_crossectional_harmonized, result_AKG$df_clean[, c("Patient.ID", "PID", "Array", "Collection.Date", names(result_AKG$df_clean)[ncol(result_AKG$df_clean)])], c("Patient.ID", "PID", "Array", "Collection.Date"), all.x = TRUE)
# Replace NA values with FALSE, otherwise the rows you remove in the function above will have NA values in filtered_df_crossectional_harmonized
filtered_df_crossectional_harmonized <- replace_na_with_false(filtered_df_crossectional_harmonized, "AKG")
#Compare searchword method to not using searchwords
# Print the result
print(paste("Number of users without using searchwords:", 0))
print(paste("Number of extra users using searchwords:", sum(result_AKG$searchword_findings$AKG, na.rm = TRUE)))
print(paste("Total number of users using searchwords and previous cathegorization method:", sum(result_AKG$df_clean1$AKG, na.rm = TRUE)))
print(paste("To see text answers cathegorized as true see: AKG_searchword_findings"))
AKG_searchword_findings<-result_AKG$searchword_findings
# Sortera dataframe efter en kollumn som bara finns i survey 2-3 för quality control
df_EPICv1_EPICv2_new <- df_EPICv1_EPICv2_new %>% arrange(desc(BMI))
# filtered_df_crossectional_harmonized <- filtered_df_crossectional_harmonized %>% arrange(Primary.Diet.Past.Year)
# filtered_df_crossectional_harmonized <- filtered_df_crossectional_harmonized %>% arrange(Strictly.Followed.)
# filtered_df_crossectional_harmonized <- filtered_df_crossectional_harmonized %>% arrange(Red.Meat.times.per.week)
# filtered_df_crossectional_harmonized <- filtered_df_crossectional_harmonized %>% arrange(Processed.Food.times.per.week)
# filtered_df_crossectional_harmonized <- filtered_df_crossectional_harmonized %>% arrange(Feel.Well.Rested.days.per.week)
# filtered_df_crossectional_harmonized <- filtered_df_crossectional_harmonized %>% arrange(Screens.before.bed)
# filtered_df_crossectional_harmonized <- filtered_df_crossectional_harmonized %>% arrange(Track.Sleep.Wearable.Device)
write.csv(filtered_df_crossectional_harmonized, file = "C:/Users/danwik/OneDrive - Karolinska Institutet/Documents/Project 2 - Vscode/Output/data_after_step1", row.names = FALSE)
p_load(dplyr)
all_searchword_findings<-merge(AKG_searchword_findings, DHEA_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, Exosomes_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, fasting_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, HRT_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, Metformin_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, NAD_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, Resveratrol_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, SASP_supressors_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, semaglutide_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, spermidine_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, stem_cells_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, sulforaphane_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, TA65_searchword_findings, all = TRUE)
all_searchword_findings<-merge(all_searchword_findings, vitaminD_searchword_findings, all = TRUE)
all_searchword_findings$sups_meds_interventions <- paste(
ifelse(is.na(all_searchword_findings$Supplements.Medication), "", all_searchword_findings$Supplements.Medication),
ifelse(is.na(all_searchword_findings$Anti.Aging.Interventions), "", all_searchword_findings$Anti.Aging.Interventions),
sep = " + "
)
# # Optional: Remove cases where the entire string is just " + " (in case both values were NA)
# all_searchword_findings$sups_meds_interventions <- gsub("^ \\+ $", "", all_searchword_findings$sups_meds_interventions)
#
all_searchword_findings <- subset(all_searchword_findings, select = -c(PID, Supplements.Medication, Anti.Aging.Interventions))
all_searchword_findings <- all_searchword_findings %>% relocate(sups_meds_interventions, .before = TA.65)
